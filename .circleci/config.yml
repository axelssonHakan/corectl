version: 2
jobs:
  build:
    working_directory: /go/src/github.com/qlik-oss/core-cli
    docker:
      - image: circleci/golang:1.9
    steps:
      - checkout
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: go get -u github.com/golang/lint/golint
      - restore_cache:
          key: dependency-cache-{{ checksum "Gopkg.lock" }}
      - run: 
          name: Install dependencies
          command: dep ensure
      - save_cache:
          key: dependency-cache-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor
      # - run:
      #     name: Linting
      #     command: golint -set_exit_status
      - run:
          name: Build
          command: go build
      - run:
          name: Test
          command: go test -v -race ./...
      - setup_remote_docker
      - run:
          name: Run Integration Test
          working_directory: /go
          command: |
            # Spin up environment
            ACCEPT_EULA=yes docker-compose -f src/github.com/qlik-oss/core-cli/test/docker-compose.yml up -d
            CONTAINER_ID=$(docker ps -aqf "name=engine")
            TEST_HOST=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.Gateway}}{{end}}' "$CONTAINER_ID")
            # Start a container for test execution
            TEST_CONTAINER=$(docker run -e TEST_HOST=$TEST_HOST -d golang:1.9-alpine tail -f /dev/null)
            # Install packages
            docker exec $TEST_CONTAINER sh -c 'apk update && apk add --no-cache bash make'
            # Copy code into container
            docker cp . $TEST_CONTAINER:/go
            # Copy apps and data into engine container
            docker cp src/github.com/qlik-oss/core-cli/test/apps/ $CONTAINER_ID:/home/nobody
            docker cp src/github.com/qlik-oss/core-cli/test/data/ $CONTAINER_ID:/home/nobody
            # Execute tests
            docker exec $TEST_CONTAINER /bin/bash -c 'go test /go/src/github.com/qlik-oss/core-cli/test/cli_integration_test.go --engineIP $TEST_HOST:9076'
            # Bring down the docker-compose and test container
            docker-compose -f src/github.com/qlik-oss/core-cli/docker-compose.yml down
            docker kill $TEST_CONTAINER
      # - run:
      #     name: Integration Test
      #     working_directory: /go
      #     command: |
      #         set +e
      #         ENGINE_CONTAINER_ID=$(docker ps -aqf "name=engine")
      #         TEST_CONTAINER_ID=$(docker run -d golang:1.9-alpine tail -f /dev/null)
      #         ENGINE_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $ENGINE_CONTAINER_ID)
      #         docker cp /go/src/github.com/qlik-oss/core-cli/test/apps/ $ENGINE_CONTAINER_ID:/apps
      #         docker cp /go/src/github.com/qlik-oss/core-cli/test/data/ $ENGINE_CONTAINER_ID:/data
      #         echo "Engine Container IP is $ENGINE_IP"
      #         docker cp . $TEST_CONTAINER_ID:/go
      #         docker exec $TEST_CONTAINER_ID /bin/sh -c 'apk update && apk add --no-cache socat bash make'
      #         docker exec -d $TEST_CONTAINER_ID /bin/bash -c "socat TCP-LISTEN:9076,fork TCP:$ENGINE_IP:9076"
      #         docker exec $TEST_CONTAINER_ID /bin/bash -c "go test /go/src/github.com/qlik-oss/core-cli/test/cli_integration_test.go --engineIP $ENGINE_IP:9076"